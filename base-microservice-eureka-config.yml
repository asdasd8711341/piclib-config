spring:
  profiles:
    active:
      - dev
---
server:
  port: 7001
eureka:
  instance:
    hostname: eureka1     # 定义 Eureka 实例所在的主机名称  其它的为  eureka2   eureka3
  client:
    fetch-registry: false     # 要不要去注册中心获取其他服务的地址，解决eureka启时报错
    register-with-eureka: false      #是否当前客户端要注册到eureka
    service-url:
      defaultZone: http://admin:a@eureka1:7001/eureka
  server:
    eviction-interval-timer-in-ms: 60000    #设置清理的间隔时间，ms (默认是60秒）
    enable-self-preservation: false       #设置为false表示关闭保护模式,在保护模式下，如因为网络或其它问题服务提供者掉线的话，eureka不会立即清空服务列表.
spring:
  profiles: dev
  security:
    user:
      name: admin
      password: a
  application:
    name: microcloud-config-eureka
  cloud:
    stream:
      kafka:
        binder:
          brokers: 101.200.216.156
---
server:
  port: 7001
eureka:
  instance:
    hostname: eureka1     # 定义 Eureka 实例所在的主机名称  其它的为  eureka2   eureka3
  client:
    fetch-registry: false     # 要不要去注册中心获取其他服务的地址，解决eureka启时报错
    register-with-eureka: false      #是否当前客户端要注册到eureka
    service-url:
      defaultZone: http://admin:a@eureka1:7001/eureka
  server:
    eviction-interval-timer-in-ms: 60000    #设置清理的间隔时间，ms (默认是60秒）
    enable-self-preservation: false       #设置为false表示关闭保护模式,在保护模式下，如因为网络或其它问题服务提供者掉线的话，eureka不会立即清空服务列表.
spring:
  profiles: beta
  security:
    user:
      name: admin
      password: a
  application:
    name: microcloud-config-eureka
  cloud:
    stream:
      kafka:
        binder:
          brokers: 101.200.216.156
