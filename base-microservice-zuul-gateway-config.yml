spring:
  profiles:
    active:
      - dev
      
---      
server:
  port: 9501

eureka:
  client: # 客户端进行Eureka注册的配置
    service-url:
      defaultZone: http://admin:a@eureka1:7001/eureka,http://admin:a@eureka2:7002/eureka,http://admin:a@eureka3:7003/eureka
    register-with-eureka: true     #注册 到eureka中
  instance:
    instance-id: microservice-zuul-gateway
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 2    #设置心跳间隔时间
    lease-expiration-duration-in-seconds: 5  # 租约超时时间间隔

info:
  app.name: microservice-zuul-gateway
  company.name: gsn
  build.artifactId: $project.artifactId$
  build.modelVersion: $project.modelVersion$





spring:
  application:
    name:  microservice-zuul-gateway
  security:
    user:
      name: admin
      password: b
  profiles: beta    


#zuul:
#  routes:    #路由配置
#    microservice-provider-user:  /user-proxy/**       #起个别名
#  ignored-services:
#    #microservice-provider-user  #忽略掉用户服务的名称   忽略单个
#    "*"     #忽略全部

#另一种面向服务的路由配置方式
#在配置文件中出现的user其实是一个逻辑名称，这个名称主要作用是将path与serviceId绑定在一起
#zuul:
#  routes:
#    user.path: /user-proxy/**      #  *  单路径下的  /user-proxy/b /user-proxy/a /user-proxy/c  |  **  全路径下的  /user-proxy/b /user-proxy/a/b/c /user-proxy/a/b
#    user.serviceId: microservice-provider-user
#  ignored-services:
#    "*"             #必须标双引号





#传统路由方式的配置   写死的,没有eureka的时候用
#公共前缀
zuul:
  routes:
    user1:
      path: /user1-proxy/**
      serviceId: microservice-provider-user
    user2:        #传统的路由方式
      path: /user2-proxy/**
      url: http://localhost:5555/
    product:
      path: /product-proxy/**
      serviceId: microservice-provider
      sensitiveHeaders:
  ignored-services:
    "*"
  prefix: /yc-api    #公共前缀


logging:
  level:
    com.gsn.piclib: debug
